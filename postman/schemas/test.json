{
  "openapi": "3.0.0",
  "info": {
    "description": "KSS Web & Mobile App.",
    "version": "1.0.0",
    "title": "KSS API Specificatiion ",
    "contact": {
      "email": "kabeeEnterprise@kabbee.com"
    }
  },
  "tags": [
    {
      "name": "BaseLine",
      "description": "Routes of BaseLine"
    },
    {
      "name": "Home",
      "description": "Routes of Home"
    },
    {
      "name": "Content Creator",
      "description": "Routes of Content Creator"
    },
    {
      "name": "Content",
      "description": "Routes of Content"
    },
    {
      "name": "User",
      "description": "Routes of Users"
    },
    {
      "name": "Feedback",
      "description": "Routes of Feedback"
    }
  ],
  "servers": [
    {
      "url": "https://hdeimjvkla.execute-api.us-east-1.amazonaws.com/dev/api",
      "description": "AWS Server Enviroment"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "BaseLine"
        ],
        "summary": "User Registration",
        "description": "",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully saved Verification email is Sent  ybabulet@kabbee.org"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/DetailOnRegistration"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/user/subscribers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get All Subscribers",
        "description": "",
        "operationId": "getSubscribers",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserFromMe"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/enableSubscriber": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Enable or Disable Subscriber",
        "description": "",
        "operationId": "enableDisableSubscriber",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "type": "string",
                    "example": "c1908e10-76b0-11eb-bd23-356c0dd63258"
                  },
                  "boolValue": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "BaseLine"
        ],
        "summary": "to login into the system",
        "description": "",
        "operationId": "login",
        "requestBody": {
          "description": "enter email and password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "awega2010@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnLoginUser"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotVerfied"
          },
          "429": {
            "description": "Request Time Limit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many accounts created from this User, please try again after 15 Minutes"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resetPassword/forgot": {
      "post": {
        "tags": [
          "BaseLine"
        ],
        "summary": "sending email to reset password",
        "description": "",
        "operationId": "resetForget",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 256,
                    "example": "awega2010@gmail.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email is sent"
                    },
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/resetPassword/{id}/{token}": {
      "get": {
        "tags": [
          "BaseLine"
        ],
        "summary": "redirect to the change password form",
        "operationId": "redirectToTheForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "token",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Redirected to the Change Password Form"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvaliedId"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/resetPassword/reset": {
      "post": {
        "tags": [
          "BaseLine"
        ],
        "summary": "Saving New Password",
        "operationId": "resetReset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "token",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully saved"
                    },
                    "detail": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/updatePic/{picType}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "To update profile or wallpaper picture",
        "description": "",
        "operationId": "updatePic",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "picType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "profile",
                "wallpaper"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully generated a signed URL"
                    },
                    "detail": {
                      "type": "string",
                      "example": "https://kabbee-stream-images.s3.amazonaws.com/profile/image/904e7db0-602d-11eb-a080-8718ee2dc61a?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQL234HLSFPRC7Q7W%2F20210127%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210127T121353Z&X-Amz-Expires=1800&X-Amz-Signature=419d06abd5c5cebca458d05e9663c7d29628f41535840b01b0dc1488bf7390a9&X-Amz-SignedHeaders=host"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InavliedRequestParameter"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "BaseLine"
        ],
        "summary": "View my Profile",
        "description": "",
        "operationId": "viewProfile",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      },
      "put": {
        "tags": [
          "BaseLine"
        ],
        "summary": "Update my Profile",
        "description": "",
        "operationId": "updateMyProfile",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateProfile"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvaliedId"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/requestToBeCC": {
      "put": {
        "tags": [
          "Content Creator"
        ],
        "summary": "public user request to be Content Creator",
        "description": "",
        "operationId": "requestToBeCC",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation Error"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Invalid GUUID Id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Content Creator"
        ],
        "summary": "Admin request the list of public users requested to be content creator",
        "description": "",
        "operationId": "getRequestToBeCC",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserFromMe"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/requestToBeCC/{id}": {
      "get": {
        "tags": [
          "Content Creator"
        ],
        "summary": "Admin request the list of public users requested to be content creator",
        "description": "",
        "operationId": "getRequestToBeCCById",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InavliedRequestParameter"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/approveToBeCC": {
      "put": {
        "tags": [
          "Content Creator"
        ],
        "summary": "Admin Approve or DisApprove for a public user that requested to be Content Creator",
        "description": "",
        "operationId": "approveToBeCC",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "isApproved": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "userId",
                  "isApproved"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "string",
                      "example": "User succesfully approved to be Content Creator"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body validation Error"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Gender should be male or female"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundError"
          }
        }
      }
    },
    "/user/search/email/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Search for user by partial email address",
        "description": "",
        "operationId": "searchEmail",
        "parameters": [
          {
            "$ref": "#/components/parameters/AdminAndAgent"
          },
          {
            "name": "email",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserSearch"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundError"
          }
        }
      }
    },
    "/user/search/emailMatch/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Search for user using email address (returns exact match)",
        "description": "",
        "operationId": "searchEmailMatch",
        "parameters": [
          {
            "$ref": "#/components/parameters/AdminAndAgent"
          },
          {
            "name": "email",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserSearchMatch"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/addNew": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "content creator add new Content",
        "description": "",
        "operationId": "addNewContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/ContentCreator"
          }
        ],
        "requestBody": {
          "description": "Enter content Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Sample Video"
                  },
                  "description": {
                    "type": "string",
                    "example": "It is an Action movie"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "audio",
                      "video"
                    ]
                  },
                  "lyrics": {
                    "type": "string",
                    "example": "looking back on the things I have done"
                  },
                  "language": {
                    "type": "string",
                    "example": "Arab"
                  }
                },
                "required": [
                  "title",
                  "type",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/AddNewContentReturn"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/play/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Play for a content",
        "description": "",
        "operationId": "playContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/ContentCreator"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully generated a signed URL"
                    },
                    "detail": {
                      "type": "string",
                      "example": " "
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/shareMessage/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Prepare a message for sharing content with friends",
        "description": "",
        "operationId": "shareContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully generated Message"
                    },
                    "detail": {
                      "type": "string",
                      "example": " "
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/playingDone": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "when we Close media Player (increment the view upon half of it watched)",
        "description": "",
        "operationId": "playingDone",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "Successfully generated a signed URL"
                  },
                  "visitTime": {
                    "type": "string",
                    "example": "2020-04-02"
                  },
                  "playedDuration": {
                    "type": "number",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully Saved"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/content/favourites": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "get the favourites list",
        "description": "",
        "operationId": "getfavourites",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnContent"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/favourite": {
      "put": {
        "tags": [
          "Content"
        ],
        "summary": "Set favourites",
        "description": "",
        "operationId": "set favourite",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "description": "Enter favourite Content Id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "Sample Video"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "contentId",
                  "isFavourite"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ContentsAlreadyFavourite"
          }
        }
      }
    },
    "/content": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Getting the contents",
        "description": "",
        "operationId": "getcontent",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnContent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RateValidationError"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/rate": {
      "put": {
        "tags": [
          "Content"
        ],
        "summary": "Set rate",
        "description": "",
        "operationId": "setRate",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "description": "Enter rate & Content Id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "06015330-6037-11eb-9134-738331132449"
                  },
                  "rate": {
                    "type": "number",
                    "example": 3,
                    "minimum": 1,
                    "maximum": 5
                  }
                },
                "required": [
                  "contentId",
                  "rate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "averageRate": {
                          "type": "number"
                        },
                        "rate": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/RateValidationError"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/download/{contentId}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get a download link for a selected content",
        "description": "",
        "operationId": "downloadContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "contentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "type": {
                      "type": "string",
                      "example": "video"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnContentDownload"
                      }
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/06222e20-5722-11eb-8b9a-a3aee3661d86"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ContentDownloadUnavailable"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/search/title/{title}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Search for content using content Title",
        "description": "",
        "operationId": "SearchContentByTitle",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "title",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedContentSearchByTitle"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request Timed out Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Request Timed out Error"
                    },
                    "messageCode": {
                      "type": "number",
                      "example": 300
                    },
                    "detail": {
                      "type": "string",
                      "example": "ETIMEDOUT"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/myContent": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get my contents (for content creators)",
        "description": "",
        "operationId": "getMyContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/ContentCreator"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnMyContent"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/getByType/{contentType}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get contents by Content Type",
        "description": "",
        "operationId": "getContentsByContentType",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "contentType",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnContent"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body Validation Error"
                    },
                    "messageCode": {
                      "type": "number",
                      "example": 300
                    },
                    "detail": {
                      "type": "string",
                      "example": "child \"contentType\" fails because [\"contentType\" must be one of [video, audio]]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/getByCategory/{category}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get contents by Category",
        "description": "",
        "operationId": "getContentsByCategory",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "category",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnContent"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body Validation Error"
                    },
                    "messageCode": {
                      "type": "number",
                      "example": 300
                    },
                    "detail": {
                      "type": "string",
                      "example": "child \"categoryType\" fails because [\"categoryType\" must be one of [Action, Romance, Herror, Western]]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/getByGenre/{genre}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Get contents by Genre",
        "description": "",
        "operationId": "getContentsByGenre",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "genre",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnContent"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body Validation Error"
                    },
                    "messageCode": {
                      "type": "number",
                      "example": 300
                    },
                    "detail": {
                      "type": "string",
                      "example": "child \"genreType\" fails because [\"genreType\" must be one of [Fiction, Drama, Horror, Triller]]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/delete/{id}": {
      "delete": {
        "tags": [
          "Content"
        ],
        "summary": "Soft deletes a content",
        "description": "",
        "operationId": "deleteContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnContent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/updateContent": {
      "put": {
        "tags": [
          "Content"
        ],
        "summary": "Updates a content",
        "description": "",
        "operationId": "updateContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/ContentCreator"
          }
        ],
        "requestBody": {
          "description": "Enter Id & values of content to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "06015330-6037-11eb-9134-738331132449"
                  },
                  "title": {
                    "type": "string",
                    "example": "New Title"
                  },
                  "description": {
                    "type": "string",
                    "example": "New description"
                  },
                  "artist": {
                    "type": "string",
                    "example": "Artist Name"
                  },
                  "language": {
                    "type": "string",
                    "example": "English"
                  },
                  "category": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "movie"
                    }
                  },
                  "genre": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Horror"
                    }
                  }
                },
                "required": [
                  "contentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnContent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvaliedId"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home/featured": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the featured Content",
        "description": "",
        "operationId": "getfeatured",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home/recentPlayed": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the recent played Content",
        "description": "",
        "operationId": "getRecentPlayed",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the home Content",
        "description": "",
        "operationId": "getHome",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home/recommended": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the recommended Content",
        "description": "",
        "operationId": "getRecommmended",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home/trending": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the trending Content",
        "description": "",
        "operationId": "getTrending",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home/madeForYou": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the madeFor You Content",
        "description": "",
        "operationId": "getMadeForYou",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/home/popularGospelSongs": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "get the popular gospel songs Content",
        "description": "",
        "operationId": "getPopularGospelSongs",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HomeReturnObject"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/user/agent/add": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin Add a user to be An Agent",
        "description": "",
        "operationId": "addAgent",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                  }
                },
                "required": [
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    },
                    {
                      "$ref": "#/components/schemas/UserAlreadyAgent"
                    },
                    {
                      "$ref": "#/components/schemas/UserAlreadyAddedToBeAgentError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin Add Cancel Remove a user to be An Agent based On Query,",
        "description": "",
        "operationId": "baseOnQuery",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "method",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "cancel",
                "add",
                "remove"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      },
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "get All Agents",
        "description": "",
        "operationId": "getAllAgents",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserFromMe"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/invite": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Invite a friend to Join on KSS,",
        "description": "",
        "operationId": "inviteFriend",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invitation email has Sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/user/changePassword": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change password of the current user,",
        "description": "",
        "operationId": "changePassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "example": "myCurrentPassword123"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "myNewPassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully updated"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Password Successfully changed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password doesn't match requirements Error"
                    },
                    "messageCode": {
                      "type": "string",
                      "example": "300"
                    },
                    "detail": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/agent/cancel": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin cancel a user in process to be Agent",
        "description": "",
        "operationId": "cancelAgent",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/remove": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin remove an Agent Role from an Agent",
        "description": "",
        "operationId": "removeAgent",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/response": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "An Agent Accept or Deny the terms and coditions",
        "description": "",
        "operationId": "acceptOrDenyInvitation",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acceptance": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    },
                    {
                      "$ref": "#/components/schemas/ValidationErrors"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/isActive": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin Set an Agent Active or Inactive",
        "description": "",
        "operationId": "setActiveOrInactiveAgent",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                  },
                  "boolValue": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Valiadtion Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrors"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/isActive/{boolValue}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin get Active or Inactive Agents",
        "description": "",
        "operationId": "getActiveOrInactiveAgent",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "boolValue",
            "in": "path",
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserFromMe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body validation Error"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Gender should be male or female"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/agent/balance": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Agent get his Balance (check)",
        "description": "",
        "operationId": "getMyBalance",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/requestCredit": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Agent Request credit",
        "description": "",
        "operationId": "requestCredit",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "example": 5000
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "requested"
                    ]
                  }
                },
                "required": [
                  "price",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReturnedUserFromMe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    },
                    {
                      "$ref": "#/components/schemas/ValidationErrors"
                    },
                    {
                      "$ref": "#/components/schemas/AgentNotActiveError"
                    },
                    {
                      "$ref": "#/components/schemas/AgentAlreadyRequestedCreditError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      },
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin get Agents that request credit",
        "description": "",
        "operationId": "getAgentRequestCredit",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "example": "c1908e10-76b0-11eb-bd23-356c0dd63258"
                          },
                          "requestPrice": {
                            "$ref": "#/components/schemas/Currency"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/agent/cancelRequestCredit": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Agent cancel the request credit that is not approved or rejected",
        "description": "",
        "operationId": "cancelRequestCredit",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "string",
                      "example": "You have Succefully canceled the Credit request"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    },
                    {
                      "$ref": "#/components/schemas/AgentRequestCreditError"
                    },
                    {
                      "$ref": "#/components/schemas/AgentNotActiveError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/approveCredit": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Admin approve or disapprove credit",
        "description": "",
        "operationId": "approveCredit",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                  },
                  "approval": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "userId",
                  "approval"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "string",
                      "example": "10000 Credit Approved to Noel"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    },
                    {
                      "$ref": "#/components/schemas/ValidationErrors"
                    },
                    {
                      "$ref": "#/components/schemas/AgentNotActiveError"
                    },
                    {
                      "$ref": "#/components/schemas/AgentRequestCreditError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/subscribeFor": {
      "put": {
        "tags": [
          "Agent"
        ],
        "summary": "Agent Subscribe for Subscriber using Email",
        "description": "",
        "operationId": "subscriberFor",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "awega2019@gmail.com"
                  },
                  "planId": {
                    "type": "string",
                    "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                  }
                },
                "required": [
                  "email",
                  "planId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Subscription Completed Succesfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IdValidationError"
                    },
                    {
                      "$ref": "#/components/schemas/ValidationErrors"
                    },
                    {
                      "$ref": "#/components/schemas/AgentNotActiveError"
                    },
                    {
                      "$ref": "#/components/schemas/AgentRequestCreditError"
                    },
                    {
                      "$ref": "#/components/schemas/SubscriberAlreadyActiveError"
                    },
                    {
                      "$ref": "#/components/schemas/AgentDoestNotHaveEnoughBalanceError"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/enableUser": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Enable or Disable User Account",
        "description": "",
        "operationId": "enableOrDisableUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "type": "string",
                    "example": "c1908e10-76b0-11eb-bd23-356c0dd63258"
                  },
                  "boolValue": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "string",
                      "example": "User account succesfully enabled\""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/creditTransactions": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "get the credit transactions",
        "description": "",
        "operationId": "getCreditTransactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgentCreditTransaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/user/agent/subscriptionTransactions": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "get the subscription transactions",
        "description": "",
        "operationId": "getSubscriptionTransactions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgentSubscriptionTransaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/setting/plan/countryPlan": {
      "get": {
        "tags": [
          "Setting plan"
        ],
        "summary": "get Plans",
        "description": "",
        "operationId": "getCountryPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/Agent"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Plans"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/{planId}": {
      "get": {
        "tags": [
          "Setting plan"
        ],
        "summary": "get a plan By id",
        "description": "",
        "operationId": "getPlanById",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          },
          {
            "name": "planId",
            "description": "plan id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plans"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan": {
      "get": {
        "tags": [
          "Setting plan"
        ],
        "summary": "get all plan setting",
        "description": "",
        "operationId": "getPlansSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Plans"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Add new plan",
        "description": "",
        "operationId": "addNewPlan",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPlanBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Set plan by id",
        "description": "",
        "operationId": "putPlansSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/common": {
      "get": {
        "tags": [
          "Setting"
        ],
        "summary": "get all setting",
        "description": "",
        "operationId": "getSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Setting"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Setting"
        ],
        "summary": "create a setting",
        "description": "",
        "operationId": "createSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SettingBody"
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/SettingBody"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Setting"
        ],
        "summary": "edit a setting",
        "description": "",
        "operationId": "editSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "e930bd70-5340-11eb-97ba-ddba"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/SettingBody"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/common/{id}": {
      "get": {
        "tags": [
          "Setting"
        ],
        "summary": "get setting by id",
        "description": "",
        "operationId": "getSettingById",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "id",
            "description": "setting id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Setting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/common/name/{name}": {
      "get": {
        "tags": [
          "Setting"
        ],
        "summary": "get setting by name",
        "description": "",
        "operationId": "getSettingByName",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "name",
            "description": "setting name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Setting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/common/valueOf/{name}": {
      "get": {
        "tags": [
          "Setting"
        ],
        "summary": "get setting by value",
        "description": "",
        "operationId": "getSettingByValueOfName",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "name",
            "description": "setting name",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "lang"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/addBillingFrequency": {
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Adding billing frequency",
        "description": "adding billing frequency",
        "operationId": "addingBillingFrequency",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planid": {
                    "type": "string",
                    "example": "d3d12b10-7e31-11eb-928a-91cb92c11598"
                  },
                  "billingFrequency": {
                    "type": "object",
                    "properties": {
                      "month": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 12,
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "semester"
                      },
                      "discount": {
                        "type": "number",
                        "example": 8
                      }
                    }
                  }
                },
                "required": [
                  "planId",
                  "name",
                  "month",
                  "discount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/removeBillingFrequency": {
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Remove billing frequency",
        "description": "removing billing frequency",
        "operationId": "removingBillingFrequency",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planid": {
                    "type": "string",
                    "example": "d3d12b10-7e31-11eb-928a-91cb92c11598"
                  },
                  "billingFrequency": {
                    "type": "object",
                    "properties": {
                      "month": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 12,
                        "example": 1
                      }
                    }
                  }
                },
                "required": [
                  "planId",
                  "month"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/removeCountry": {
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Remove Country",
        "description": "removing Country",
        "operationId": "removingCountry",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planid": {
                    "type": "string",
                    "example": "d3d12b10-7e31-11eb-928a-91cb92c11598"
                  },
                  "country": {
                    "type": "string",
                    "example": "Eritrea"
                  }
                },
                "required": [
                  "planId",
                  "country"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/updateCoefficient": {
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Update Coefficient",
        "description": "Update Coefficient",
        "operationId": "updateCoefficient",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planid": {
                    "type": "string",
                    "example": "d3d12b10-7e31-11eb-928a-91cb92c11598"
                  },
                  "country": {
                    "type": "string",
                    "example": "Eritrea"
                  },
                  "coefficient": {
                    "type": "number",
                    "example": 15
                  }
                },
                "required": [
                  "planId",
                  "country",
                  "coefficient"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/addCountry": {
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Add country to the plan",
        "description": "adding billing frequency",
        "operationId": "addingCountryToThePlan",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planId": {
                    "type": "string",
                    "example": "d3d12b10-7e31-11eb-928a-91cb92c11598"
                  },
                  "country": {
                    "type": "string",
                    "example": "Ethiopia"
                  },
                  "coefficient": {
                    "type": "number",
                    "example": 50
                  }
                },
                "required": [
                  "planId",
                  "country",
                  "coefficient"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Upadated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/plan/updateBillingFrequency": {
      "put": {
        "tags": [
          "Setting plan"
        ],
        "summary": "Update billing frequency",
        "description": "updating billing frequency",
        "operationId": "updatingBillingFrequency",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planid": {
                    "type": "string",
                    "example": "d3d12b10-7e31-11eb-928a-91cb92c11598"
                  },
                  "billingFrequency": {
                    "type": "object",
                    "properties": {
                      "month": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 12,
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "semester"
                      }
                    }
                  }
                },
                "required": [
                  "planId",
                  "month"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Upadated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/setting/currency": {
      "get": {
        "tags": [
          "Currency Setting"
        ],
        "summary": "get all currency setting",
        "description": "",
        "operationId": "getCurrencySetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Currency Setting"
        ],
        "summary": "create a setting",
        "description": "",
        "operationId": "createCurrencSSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CurrencyBody"
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Upadated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/CurrencyBody"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Currency Setting"
        ],
        "summary": "edit a currency setting",
        "description": "",
        "operationId": "currencyEditSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "example": "Eritrea"
                  },
                  "currencyName": {
                    "type": "string",
                    "example": "Nakfa"
                  },
                  "shortName": {
                    "type": "string",
                    "example": "Nkf"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Upadated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/CurrencyBody"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    },
    "/user/agent/status/{statusCode}": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "get pending Agents",
        "description": "",
        "operationId": "getPendingAgents",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "statusCode",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserFromMe"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feedback/addNew": {
      "post": {
        "tags": [
          "Feedback"
        ],
        "summary": "Add a new feedback question",
        "description": "",
        "operationId": "addNewFeedback",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "description": "Enter feedback question Info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "example": "First question here?"
                  },
                  "questionType": {
                    "type": "string",
                    "example": "MultiChoice"
                  },
                  "choices": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Choice1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/AddNewFeedbackReturn"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feedback": {
      "get": {
        "tags": [
          "Feedback"
        ],
        "summary": "get feedback question list",
        "description": "",
        "operationId": "getFeedbackList",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeedbackReturn"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Feedback"
        ],
        "summary": "Set feedback answers",
        "description": "",
        "operationId": "setFeedbackAnswer",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "description": "Enter id to save answers to feedback",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "questionId": {
                          "type": "string",
                          "example": "84393b70-8783-11eb-8b7e-6b7caa737812"
                        },
                        "answerId": {
                          "type": "string",
                          "example": "94393b70-8783-11eb-8b7e-6b7caa737812"
                        },
                        "writtenAnswer": {
                          "type": "string",
                          "example": "Written content form user"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "questionId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully saved"
                    },
                    "detail": {
                      "type": "string",
                      "example": "Feedback Saved Successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feedback/{id}": {
      "delete": {
        "tags": [
          "Feedback"
        ],
        "summary": "Soft deletes a feedback",
        "description": "",
        "operationId": "deleteFeedback",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/FeedbackReturn"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/FeedbackNotFound"
          }
        }
      }
    },
    "/user/role/{role}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "get users by thier role",
        "description": "",
        "operationId": "getUsersByRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          },
          {
            "name": "role",
            "description": "Role",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReturnedUserFromMe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InavliedRequestParameter"
          }
        }
      }
    },
    "/content/history": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "get history of a user ",
        "description": "",
        "operationId": "getHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ViewHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/IdValidationError"
          },
          "404": {
            "$ref": "#/components/responses/UserNotFound"
          }
        }
      }
    },
    "/content/comment": {
      "put": {
        "tags": [
          "Content"
        ],
        "summary": "Set Comment",
        "description": "",
        "operationId": "setComment",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "description": "Comment on the content",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "60af4ba54f779b4b8437bb39"
                  },
                  "comment": {
                    "type": "string",
                    "example": "Good Job"
                  },
                  "parentId": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "60af4ba54f779b4b8437bb39"
                    }
                  }
                },
                "required": [
                  "contentId",
                  "comment"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/Comment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/react": {
      "put": {
        "tags": [
          "Content"
        ],
        "summary": "Set Reaction",
        "description": "",
        "operationId": "setReact",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "description": "React on the content",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "60af4ba54f779b4b8437bb39"
                  },
                  "reactionId": {
                    "type": "string",
                    "example": "60af4ba54f779b4b8437bb39"
                  }
                },
                "required": [
                  "contentId",
                  "reactionId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "object",
                      "properties": {
                        "comments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        "reactions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reaction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/content/comment/react": {
      "put": {
        "tags": [
          "Content"
        ],
        "summary": "Set Reaction on Comment",
        "description": "",
        "operationId": "setReactOnComment",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "requestBody": {
          "description": "React on Comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "example": "60af4ba54f779b4b8437bb39"
                  },
                  "reactionId": {
                    "type": "string",
                    "example": "60af4ba54f779b4b8437bb39"
                  },
                  "commentId": {
                    "type": "string",
                    "example": "60af4ba54f779b4b8437bb39"
                  },
                  "parentId": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "60af4ba54f779b4b8437bb39"
                    }
                  }
                },
                "required": [
                  "contentId",
                  "reactionId",
                  "commnentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "type": "object",
                      "properties": {
                        "comments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        },
                        "reactions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Reaction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/ContentNotFound"
          }
        }
      }
    },
    "/setting/reaction": {
      "get": {
        "tags": [
          "Setting Reaction"
        ],
        "summary": "get all reaction setting",
        "description": "",
        "operationId": "getReactionSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/User"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Requested"
                    },
                    "detail": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReactionType"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Setting Reaction"
        ],
        "summary": "Add new reaction",
        "description": "",
        "operationId": "addNewReactionSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "emojiUrl": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "emojiUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Saved"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReactionType"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Setting Reaction"
        ],
        "summary": "Set reaction by id",
        "description": "",
        "operationId": "putReactionSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reactionId": {
                    "type": "string"
                  },
                  "emojiUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "reactionId",
                  "emojiUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReactionType"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Setting Reaction"
        ],
        "summary": "Delete reaction by id",
        "description": "",
        "operationId": "deleteReactionSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/Admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Succeffully Updated"
                    },
                    "detail": {
                      "$ref": "#/components/schemas/ReactionType"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/settingNotFound"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "UpdateProfile": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUser"
            }
          }
        }
      },
      "SettingBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SettingBody"
            }
          }
        }
      },
      "CurrencyBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CurrencyBody"
            }
          }
        }
      }
    },
    "parameters": {
      "Admin": {
        "description": "Admin Only",
        "name": "x-auth-token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "User": {
        "description": "User",
        "name": "x-auth-token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "ContentCreator": {
        "description": "Content Creator Only",
        "name": "x-auth-token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "Agent": {
        "description": "Agent Only",
        "name": "x-auth-token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "AdminAndAgent": {
        "description": "Admin and Agent Only",
        "name": "x-auth-token",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "ContentId": {
        "description": "Content Id",
        "name": "id",
        "in": "header",
        "schema": {
          "type": "string"
        },
        "required": true
      }
    },
    "responses": {
      "HomeReturnObject": {
        "description": "successful operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnContent"
                  }
                }
              }
            }
          }
        }
      },
      "AlreadyRegistered": {
        "description": "Already Registered",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The user with this email has already registered."
                }
              }
            }
          }
        }
      },
      "NetworkError": {
        "description": "Network Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Network Error"
                }
              }
            }
          }
        }
      },
      "InavliedRequestParameter": {
        "description": "Invalied Request Parameter",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalied Request Parameter"
                },
                "detail": {
                  "type": "string",
                  "example": "user id is Invalied"
                }
              }
            }
          }
        }
      },
      "InvaliedId": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Body Validation Error"
                },
                "detail": {
                  "type": "string",
                  "example": "Id is required"
                }
              }
            }
          }
        }
      },
      "UserNotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not Found"
                }
              }
            }
          }
        }
      },
      "settingNotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Setting not Found"
                }
              }
            }
          }
        }
      },
      "UserNotFoundError": {
        "description": "User Not found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not Found"
                },
                "messageCode": {
                  "type": "integer",
                  "example": 300
                },
                "detail": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        }
      },
      "FeedbackNotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Feedback Not Found Error"
                },
                "messageCode": {
                  "type": "integer",
                  "example": 300
                },
                "detail": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        }
      },
      "ContentNotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Content Not Found"
                }
              }
            }
          }
        }
      },
      "ContentsAlreadyFavourite": {
        "description": "Already Favourite",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation Error"
                },
                "detail": {
                  "type": "string",
                  "example": "The Content is already the user's favourite"
                }
              }
            }
          }
        }
      },
      "ContentDownloadUnavailable": {
        "description": "Download for selected content is not available",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Downloadable content is not available"
                },
                "detail": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        }
      },
      "RateValidationError": {
        "description": "Rate validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation Error"
                },
                "detail": {
                  "type": "string",
                  "example": "rate minimum value should be 1"
                }
              }
            }
          }
        }
      },
      "UserNotVerfied": {
        "description": "User Not verfied",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User is not verfied"
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Body validation Error"
                },
                "detail": {
                  "type": "string",
                  "example": "Gender should be male or female"
                }
              }
            }
          }
        }
      },
      "AgentNotActiveError": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Agent Not Active Error"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Access denied",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "NO token provided"
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Access denied",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid token provided"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "AgentNotActiveError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Agent Not Active Error"
          }
        }
      },
      "ValidationErrors": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Validation Error"
          }
        }
      },
      "ParameterValidationErorr": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalied Parameter Error"
          }
        }
      },
      "BodyValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Body Validation Error"
          }
        }
      },
      "IdValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Id Is Not Valid Error"
          }
        }
      },
      "UserAlreadyRegisteredError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "UserAlreadyRegisteredError"
          }
        }
      },
      "UserAlreadyAgent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User is already an Agent"
          }
        }
      },
      "UserAlreadyAddedToBeAgentError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User is already Added to be an Agent"
          }
        }
      },
      "UserAlreadyRequestedToBeCCError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User already has made a request to be content creator"
          }
        }
      },
      "UserNotVerifiedError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Agent Not Active Error"
          }
        }
      },
      "UserNotActiveError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User Not Verified Error"
          }
        }
      },
      "AgentRequestCreditError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Agent Did Not Request Credit Error"
          }
        }
      },
      "AgentAlreadyRequestedCreditError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Agent Already Request Credit Error"
          }
        }
      },
      "AgentDoestNotHaveEnoughBalanceError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Agent does not have Enough Balance"
          }
        }
      },
      "SubscriberAlreadyActiveError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Subscriber Already Active"
          }
        }
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "firstName": {
            "type": "string",
            "example": "Awet"
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "Nuguse"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "phone": {
            "type": "string",
            "example": "00251935752214"
          },
          "login": {
            "$ref": "#/components/schemas/Login"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "favourites": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "e930bd70-5340-11eb-97ba-ddba"
            }
          },
          "viewHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViewHistory"
            }
          },
          "hasProfilePic": {
            "type": "boolean",
            "example": true
          },
          "hasWallpaperPic": {
            "type": "boolean",
            "example": true
          },
          "subscriberStatus": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ContentModel": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "title": {
            "type": "string",
            "example": "The White Tiger"
          },
          "fileName": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "description": {
            "type": "string",
            "example": "Movie about Crime ...."
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "isApproved": {
            "type": "boolean",
            "example": true
          },
          "isReleased": {
            "type": "boolean",
            "example": true
          },
          "isEnabled": {
            "type": "boolean",
            "example": true
          },
          "type": {
            "type": "string",
            "enum": [
              "audio",
              "video"
            ]
          },
          "srcMediaInfo": {
            "$ref": "#/components/schemas/SrcMediainfo"
          },
          "MetaData": {
            "$ref": "#/components/schemas/MetaData"
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Action"
            }
          },
          "contentType": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Documentary"
            }
          },
          "language": {
            "type": "string",
            "example": "English"
          },
          "lyrics": {
            "type": "string",
            "example": "I am not afraid ....."
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rate"
            }
          },
          "averageRate": {
            "type": "number"
          },
          "views": {
            "type": "number",
            "example": 230
          },
          "videoUploadUrl": {
            "type": "string",
            "example": "https://polaris-test-input.s3.amazonaws.com/content/videos/eebd53f0-57e3-11eb-b15e-194e6351935c?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQL234HLSFPRC7Q7W%2F20210116%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210116T101643Z&X-Amz-Expires=1800&X-Amz-Signature=885d88d305bf9295fe0e8003b8a4945fed9f7a5a126e239990c6a1c03019c054&X-Amz-SignedHeaders=host"
          },
          "thumbnailUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/default/audio-thumbnail"
          },
          "hasThumbnailPic": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "SettingModel": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "2cb5eaf0-4cea-11eb-8356-33a148a97746"
          },
          "settingDescription": {
            "type": "string",
            "example": "Content Genre"
          },
          "settingType\"": {
            "type": "string",
            "example": "List"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "horror"
            }
          },
          "isAppScope": {
            "type": "boolean",
            "example": false
          },
          "settingName": {
            "type": "string",
            "example": "language"
          }
        }
      },
      "InteractionModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "2cb5eaf0-4cea-11eb-8356-33a148a97746"
          },
          "eventType": {
            "type": "string",
            "example": "watch",
            "enum": [
              "watch",
              "click"
            ]
          },
          "contentId\"": {
            "type": "string",
            "example": "21c25a50-565b-11eb-acca-515b5061bc88"
          },
          "id": {
            "type": "string",
            "example": "45d7a700-760f-11eb-b1c0-0da5e5471a21"
          }
        }
      },
      "Rate": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "example": 4
          },
          "userId": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          }
        }
      },
      "MetaData": {
        "type": "object",
        "properties": {
          "srcHeight": {
            "type": "number",
            "example": 360
          },
          "srcWidth": {
            "type": "number",
            "example": 640
          },
          "hlsUrl": {
            "type": "string",
            "example": "https://dxy1ma6ti0o13.cloudfront.net/78ba870b-d5a9-4c9b-b202-1beca3f831e3/hls/eebd53f0-57e3-11eb-b15e-194e6351935c.m3u8"
          },
          "kssGuid": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          }
        }
      },
      "Action": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "actor": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "action",
          "actor",
          "time"
        ]
      },
      "SearchHistory": {
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string"
          },
          "visitTime": {
            "type": "string"
          },
          "count": {
            "type": "number"
          }
        },
        "required": [
          "searchString",
          "visitTime",
          "count"
        ]
      },
      "ViewHistory": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string"
          },
          "visitTime": {
            "type": "string",
            "format": "time"
          },
          "playedDuration": {
            "type": "number"
          }
        },
        "required": [
          "contentId",
          "visitTime"
        ]
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReturnContent"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Preference": {
        "type": "object",
        "properties": {
          "preferenceType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "resource": {
            "type": "string",
            "format": "date"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "preferenceType",
          "description",
          "resource",
          "value"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date"
          },
          "isSeen": {
            "type": "boolean",
            "example": false
          },
          "isPersistant": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "title",
          "time",
          "isSeen",
          "message",
          "isPersistant"
        ]
      },
      "paymentInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "customerRefernce": {
            "type": "string"
          },
          "subscriptionRefernce": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "customerRefernce",
          "subscriptionRefernce"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "planType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          }
        },
        "required": [
          "planType",
          "status",
          "expiryDate"
        ]
      },
      "ReactionType": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "emojiUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Reaction": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "reactionType": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "reactionType"
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "reactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reaction"
            }
          },
          "childComment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        },
        "required": [
          "user",
          "comment"
        ]
      },
      "CastAndCrew": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "photo"
        ]
      },
      "Video": {
        "type": "object",
        "properties": {
          "codec'": {
            "type": "string",
            "example": "AAC"
          },
          "bitrate": {
            "type": "number",
            "example": 192000
          },
          "duration": {
            "type": "number",
            "example": 15.044
          },
          "frameCount": {
            "type": "number",
            "example": 706
          },
          "bitrateMode": {
            "type": "string",
            "example": "CBR"
          },
          "language": {
            "type": "string",
            "example": "en"
          },
          "channels": {
            "type": "number",
            "example": 2
          },
          "samplingRate": {
            "type": "number",
            "example": 48000
          },
          "samplePerFrame": {
            "type": "number",
            "example": 1024
          }
        }
      },
      "AddNewContentReturn": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "type": {
            "type": "string",
            "enum": [
              "audio",
              "video"
            ]
          },
          "title": {
            "type": "string",
            "example": "Sample video"
          },
          "description": {
            "type": "string",
            "example": "It is An Action Movie"
          },
          "fileName": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "lyrics": {
            "type": "string",
            "example": "looking back on the things I have done"
          },
          "language": {
            "type": "string",
            "example": "English"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "thumbnailUploadUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/default/audio-thumbnail"
          },
          "videoUploadUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/default/audio-thumbnail"
          },
          "audioUploadUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/default/audio-thumbnail"
          }
        }
      },
      "AddNewFeedbackReturn": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "question": {
            "type": "string",
            "example": "First question here?"
          },
          "questionType": {
            "type": "string",
            "example": "MultiChoice"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                },
                "option": {
                  "type": "string",
                  "example": "Choice1"
                }
              }
            }
          }
        }
      },
      "FeedbackReturn": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "question": {
            "type": "string",
            "example": "First question here?"
          },
          "questionType": {
            "type": "string",
            "example": "MultiChoice"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                },
                "option": {
                  "type": "string",
                  "example": "Choice1"
                }
              }
            }
          },
          "answers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                },
                "answerId": {
                  "type": "string",
                  "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
                },
                "writtenAnswer": {
                  "type": "string",
                  "example": "Written answer given by user"
                }
              }
            }
          }
        }
      },
      "Audio": {
        "type": "object",
        "properties": {
          "codec'": {
            "type": "string",
            "example": "AVC"
          },
          "profile": {
            "type": "string",
            "example": "Main@L3.1"
          },
          "bitrate": {
            "type": "number",
            "example": 2147702
          },
          "duration": {
            "type": "number",
            "example": 15.048
          },
          "frameCount": {
            "type": "number",
            "example": 706
          },
          "width": {
            "type": "number",
            "example": 480
          },
          "height": {
            "type": "number",
            "example": 1040
          },
          "framerate": {
            "type": "number",
            "example": 58.744
          },
          "scantype": {
            "type": "string",
            "example": "Progressive"
          },
          "aspectRatio": {
            "type": "string",
            "example": "0.462"
          },
          "bitDepth": {
            "type": "number",
            "example": 8
          },
          "colorSpace": {
            "type": "number",
            "example": 48000
          },
          "samplePerFrame": {
            "type": "string",
            "example": "YUV 4:2:0"
          }
        }
      },
      "SrcMediainfo": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "example": 15
          },
          "format": {
            "type": "string",
            "example": "MPEG-4"
          },
          "fileSize": {
            "type": "number",
            "example": 4422375
          },
          "audio": {
            "$ref": "#/components/schemas/Audio"
          },
          "video": {
            "$ref": "#/components/schemas/Video"
          }
        }
      },
      "ReturnContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string",
            "enum": [
              "audio",
              "video"
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "fileName": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "rate": {
            "type": "number"
          },
          "isfavourite": {
            "type": "boolean"
          },
          "averageRate": {
            "type": "number"
          },
          "thumbnailUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/default/audio-thumbnail"
          },
          "lyrics": {
            "type": "string",
            "example": "looking back on the things I have done"
          },
          "language": {
            "type": "string",
            "example": "Tigrigna"
          },
          "genre": {
            "type": "array",
            "items": {
              "example": "drama"
            }
          },
          "category": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Horror"
            }
          }
        }
      },
      "ReturnMyContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string",
            "enum": [
              "audio",
              "video"
            ]
          },
          "averageRate": {
            "type": "number"
          },
          "thumbnailUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/content/thumbnail/default/audio-thumbnail"
          }
        }
      },
      "ReturnContentDownload": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://kss-vod-2-destination-8tk5i7usrv0m.s3.amazonaws.com/3aecbafe-e71c-49c1-87f3-04c394698a17/encrypted/15aa6e80-6ee1-11eb-aa23-256023e0ff48.dat?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQL234HLSFPRC7Q7W%2F20210215%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210215T081434Z&X-Amz-Expires=1800&X-Amz-Signature=10786724c3092cd6f88e1f4c4d14b03dc2be8b355e689fcaeeb930abb9750ca3&X-Amz-SignedHeaders=host"
          },
          "fileSize": {
            "type": "integer",
            "example": 2280156
          }
        }
      },
      "Creator": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Noel"
          },
          "lastName": {
            "type": "string",
            "example": "Fissehazion"
          },
          "middleName": {
            "type": "string",
            "example": "Kidane"
          },
          "_id": {
            "type": "string",
            "example": "70a11860-4ad4-11eb-a794-efdbca7c5749"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Awet"
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "Nuguse"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "phone": {
            "type": "string",
            "example": "00251935752214"
          },
          "photo": {
            "type": "string",
            "example": "https://s3.console.aws.amazon.com/s3/object/polaris-test-input?region=us-east-1&prefix=Awet/106.jpg"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "login": {
            "$ref": "#/components/schemas/Login"
          },
          "followers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "following": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "playlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Playlist"
            }
          },
          "favorite": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
            }
          },
          "viewHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViewHistory"
            }
          },
          "searchHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchHistory"
            }
          },
          "preference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Preference"
            }
          },
          "action": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "paymentInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentInfo"
            }
          },
          "preferedPaymentType": {
            "type": "string"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        }
      },
      "ReturnedUserFromMe": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Awet",
            "minLength": 3
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "NUguse",
            "minLength": 3
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          }
        }
      },
      "ReturnedUserSearch": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "904e7db0-602d-11eb-a080-8718ee2dc61a"
          },
          "email": {
            "type": "string",
            "example": "sample@kabbee.org"
          }
        }
      },
      "ReturnedContentSearchByTitle": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "8dcbafc0-785d-11eb-9110-f1408f5ebf88"
          },
          "title": {
            "type": "string",
            "example": "The Hitchhikers guide to the Galaxy"
          }
        }
      },
      "ReturnedUserSearchMatch": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John",
            "minLength": 3
          },
          "middleName": {
            "type": "string",
            "example": "F"
          },
          "lastName": {
            "type": "string",
            "example": "Smith",
            "minLength": 3
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone": {
            "type": "string",
            "example": "091234567",
            "minLength": 3
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Awet",
            "minLength": 3
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "NUguse",
            "minLength": 3
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "ReturnLoginUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "NUguse"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "favourites": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
            }
          },
          "profilePic": {
            "type": "string"
          },
          "wallpaperPic": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "DetailOnRegistration": {
        "type": "object",
        "properties": {
          "profileUploadUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/profile/image/af3ddd20-60e0-11eb-8b83-f1c2e5b1ce2f?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQL234HLSFPRC7Q7W%2F20210127%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210127T204623Z&X-Amz-Expires=1800&X-Amz-Signature=10b75a18584c0b9869c06781141c35ac9150f7127f33b4605005a24e1b295564&X-Amz-SignedHeaders=host"
          },
          "wallpaperUploadUrl": {
            "type": "string",
            "example": "https://kabbee-stream-images.s3.amazonaws.com/profile/image/af3ddd20-60e0-11eb-8b83-f1c2e5b1ce2f?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQL234HLSFPRC7Q7W%2F20210127%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210127T204623Z&X-Amz-Expires=1800&X-Amz-Signature=10b75a18584c0b9869c06781141c35ac9150f7127f33b4605005a24e1b295564&X-Amz-SignedHeaders=host"
          }
        }
      },
      "RequestUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Awet",
            "minLength": 3
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "NUguse",
            "minLength": 3
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "login": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "awega2010@gmail.com"
              },
              "password": {
                "type": "string",
                "example": "12345678",
                "minLength": 6
              }
            }
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Awet"
          },
          "middleName": {
            "type": "string",
            "example": "Weldehaimanot"
          },
          "lastName": {
            "type": "string",
            "example": "Nuguse"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "phone": {
            "type": "string",
            "example": "00251935752214"
          },
          "photo": {
            "type": "string",
            "example": "https://s3.console.aws.amazon.com/s3/object/polaris-test-input?region=us-east-1&prefix=Awet/106.jpg"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "login": {
            "$ref": "#/components/schemas/Login"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "dob",
          "login",
          "gender"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "USA"
          },
          "state": {
            "type": "string",
            "example": "California"
          },
          "city": {
            "type": "string",
            "example": "Los Angeles"
          }
        },
        "required": [
          "country"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "aweldehaiamnot@kabbee.org"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "isApproved": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "ADMIN"
            }
          },
          "toBeCC": {
            "type": "boolean",
            "example": true
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          }
        }
      },
      "AgentCreditTransaction": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Currency"
          },
          "status": {
            "type": "string",
            "example": "requested"
          }
        }
      },
      "AgentSubscriptionTransaction": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "subscriberId": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245f47831"
          },
          "fullName": {
            "type": "string",
            "example": "Noel kidane"
          },
          "email": {
            "type": "string",
            "example": "awega2010@gmail.com"
          },
          "price": {
            "$ref": "#/components/schemas/Currency"
          },
          "date": {
            "type": "string",
            "example": "20-04-2021"
          }
        }
      },
      "Agent": {
        "type": "object",
        "properties": {
          "email": {
            "type": "number",
            "enum": [
              100,
              200,
              300
            ],
            "example": 100
          }
        }
      },
      "prices": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "Eritrea"
          },
          "currencyName": {
            "type": "string",
            "example": "Nakfa"
          },
          "shortName": {
            "type": "string",
            "example": "NKF"
          },
          "price": {
            "type": "number",
            "example": 5
          }
        }
      },
      "Plans": {
        "type": "object",
        "properties": {
          "billingFrequency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingFrequencies"
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2021-04-07T08:32:28.301Z"
          },
          "planName": {
            "type": "string",
            "example": "basic"
          },
          "description": {
            "type": "string",
            "example": "monthly payment"
          },
          "_id": {
            "type": "string",
            "example": "c9894440-977b-11eb-b424-b94b67775b5a"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/priceX"
            }
          },
          "basePrice": {
            "type": "number",
            "example": 5
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-04-07T18:03:56.397Z"
          }
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "billingFrequency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingFrequencies"
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2021-04-07T08:32:28.301Z"
          },
          "planName": {
            "type": "string",
            "example": "basic"
          },
          "description": {
            "type": "string",
            "example": "monthly payment"
          },
          "_id": {
            "type": "string",
            "example": "c9894440-977b-11eb-b424-b94b67775b5a"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/price"
            }
          },
          "basePrice": {
            "type": "number",
            "example": 5
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-04-07T18:03:56.397Z"
          }
        }
      },
      "UpdatePlanBody": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245fa8d4"
          },
          "billingFrequency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingFrequencies"
            }
          },
          "planName": {
            "type": "string",
            "example": "basic"
          },
          "description": {
            "type": "string",
            "example": "monthly payment"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/priceBody"
            }
          },
          "basePrice": {
            "type": "number",
            "example": 5
          }
        },
        "required": [
          "planId"
        ]
      },
      "AddNewPlanBody": {
        "type": "object",
        "properties": {
          "billingFrequency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingFrequencies"
            }
          },
          "planName": {
            "type": "string",
            "example": "basic"
          },
          "description": {
            "type": "string",
            "example": "monthly payment"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/priceBody"
            }
          },
          "basePrice": {
            "type": "number",
            "example": 5
          }
        },
        "required": [
          "planName",
          "basePrice"
        ]
      },
      "priceBody": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "example": "0f8041f0-5515-11eb-be59-efd3245f47831"
          },
          "coefficient": {
            "type": "number",
            "example": 15
          }
        }
      },
      "priceX": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "coefficient": {
            "type": "number",
            "example": 15
          }
        }
      },
      "price": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string",
            "example": "39d48060-9714-11eb-b277-91355f288b82"
          },
          "coefficient": {
            "type": "number",
            "example": 15
          }
        }
      },
      "billingFrequencies": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number",
            "example": 7
          },
          "name": {
            "type": "string",
            "example": "monthly"
          },
          "discount": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "month",
          "name",
          "discount"
        ]
      },
      "SettingBody": {
        "type": "object",
        "properties": {
          "settingType": {
            "type": "string",
            "example": "list"
          },
          "settingDescription": {
            "type": "string",
            "example": "setting catagory"
          },
          "isAppScope": {
            "type": "boolean"
          },
          "settingName": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "music"
            }
          }
        }
      },
      "Setting": {
        "type": "object",
        "properties": {
          "settingType": {
            "type": "string",
            "example": "list"
          },
          "settingDescription": {
            "type": "string",
            "example": "setting catagory"
          },
          "updatedAt": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "isAppScope": {
            "type": "boolean"
          },
          "settingName": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Music"
            }
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "example": "Eritrea"
          },
          "currencyName": {
            "type": "string",
            "example": "Nakfa"
          },
          "shortName": {
            "type": "string",
            "example": "Nkf"
          }
        }
      },
      "CurrencyBody": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "Eritrea"
          },
          "currencyName": {
            "type": "string",
            "example": "Nakfa"
          },
          "shortName": {
            "type": "string",
            "example": "Nkf"
          }
        }
      }
    }
  }
}